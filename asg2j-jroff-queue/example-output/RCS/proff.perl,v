head	1.16;
access;
symbols;
locks;
comment	@# @;


1.16
date	2014.01.18.02.37.23;	author -;	state -;
branches;
next	1.15;

1.15
date	2014.01.18.02.32.51;	author -;	state -;
branches;
next	1.14;

1.14
date	2014.01.18.02.30.52;	author -;	state -;
branches;
next	1.13;

1.13
date	2014.01.18.02.30.37;	author -;	state -;
branches;
next	1.12;

1.12
date	2014.01.18.02.30.15;	author -;	state -;
branches;
next	1.11;

1.11
date	2014.01.18.02.29.37;	author -;	state -;
branches;
next	1.10;

1.10
date	2014.01.18.02.28.45;	author -;	state -;
branches;
next	1.9;

1.9
date	2014.01.18.02.26.48;	author -;	state -;
branches;
next	1.8;

1.8
date	2014.01.18.02.25.59;	author -;	state -;
branches;
next	1.7;

1.7
date	2014.01.18.02.25.44;	author -;	state -;
branches;
next	1.6;

1.6
date	2014.01.18.02.24.59;	author -;	state -;
branches;
next	1.5;

1.5
date	2014.01.18.02.17.48;	author -;	state -;
branches;
next	1.4;

1.4
date	2011.10.13.21.37.10;	author -;	state -;
branches;
next	1.3;

1.3
date	2011.10.13.21.35.42;	author -;	state -;
branches;
next	1.2;

1.2
date	2011.04.09.00.22.41;	author -;	state -;
branches;
next	1.1;

1.1
date	2011.01.21.05.15.35;	author -;	state -;
branches;
next	;


desc
@@


1.16
log
@-
@
text
@#!/usr/bin/perl -w
# $Id: proff.perl,v 1.15 2014-01-17 18:32:51-08 - - $
#
# NAME
#    proff - run the simple jroff text formatter
#
# SYNOPSIS
#    proff [filename...]
#
# DESCRIPTION
#    Runs groff to simulate proff by using compatibility macros.
#

use strict;
use warnings;

$0 =~ s|.*/||;

my $groff = "groff -Tascii -P-bcuof";
open GROFF, "| $groff" or die "$0: $groff: $!\n";
print GROFF <DATA>;
print GROFF <>;
close GROFF;

__DATA__
.cflags 5 .?!:;
.wh 0 TP
.wh -6 BP
.de mt
.   ec
.   nr MT \\$1/2
.   eo
..
.de TP
.   ec
'   sp \\n(MT
.   tl '''%'
'   sp \\n(MT-1
.   eo
..
.de BP
.   bp
..
.hy 0
.ll 65
.pl 66
.po 10
.mt 6
.na
.eo
@


1.15
log
@-
@
text
@d2 1
a2 1
# $Id: proff.perl,v 1.14 2014-01-17 18:30:52-08 - - $
d8 1
a8 1
#    proff [-Tps] [filename...]
a12 4
# OPTIONS
#    -Tps - produce output in Postscript.  Has nothing to do with
#           this assignment.
#
a17 4
my $exit_status = 0;
$SIG{'__WARN__'} = sub {print STDERR "$0: @@_"; $exit_status = 1};
$SIG{'__DIE__'} = sub {warn @@_; exit};
END {exit $exit_status}
a24 1

@


1.14
log
@-
@
text
@d2 1
a2 1
# $Id: proff.perl,v 1.13 2014-01-17 18:30:37-08 - - $
d36 1
a36 1
.wh 1 TP
@


1.13
log
@-
@
text
@d2 1
a2 1
# $Id: proff.perl,v 1.12 2014-01-17 18:30:15-08 - - $
a31 2
print STDERR "status: $?\n";
$exit_status = $? >> 8;
@


1.12
log
@-
@
text
@d2 1
a2 1
# $Id: proff.perl,v 1.11 2014-01-17 18:29:37-08 - - $
d32 1
a32 1
print "status: $?\n";
@


1.11
log
@-
@
text
@d2 1
a2 1
# $Id: proff.perl,v 1.10 2014-01-17 18:28:45-08 - - $
d32 1
a32 1
print "$?\n";
@


1.10
log
@-
@
text
@d2 1
a2 1
# $Id: proff.perl,v 1.9 2014-01-17 18:26:48-08 - - $
d32 1
@


1.9
log
@-
@
text
@d2 1
a2 1
# $Id: proff.perl,v 1.8 2014-01-17 18:25:59-08 - - $
d37 1
a37 1
.wh 0 TP
@


1.8
log
@-
@
text
@d2 1
a2 1
# $Id: proff.perl,v 1.7 2014-01-17 18:25:44-08 - - $
d46 1
a46 1
,   sp \\n(MT
d48 1
a48 1
,   sp \\n(MT-1
@


1.7
log
@-
@
text
@d2 1
a2 1
# $Id: proff.perl,v 1.6 2014-01-17 18:24:59-08 - - $
a58 1
.tl '''%'
@


1.6
log
@-
@
text
@d2 1
a2 1
# $Id: proff.perl,v 1.5 2014-01-17 18:17:48-08 - - $
d46 1
a46 1
.   sp \\n(MT
d48 1
a48 1
.   sp \\n(MT-1
@


1.5
log
@-
@
text
@d2 1
a2 1
# $Id: proff.perl,v 1.4 2011-10-13 14:37:10-07 - - $
d27 1
a27 2
my $tformat = "-Tlatin1";
my $groff = "groff $tformat -P-bcuof";
a35 6
.\"
.\" Compatibility macros to make groff simulate `jroff'.
.\" Make sure no empty or blank lines.
.\" Your program will completely ignore this file.
.\"
.c2 ,
a43 5
.de ph
.   ec
.   ds PH "\\$*
.   eo
..
d46 3
a48 3
,   sp \\n(MT
.   tl \\*(PH
,   sp \\n(MT-1
d52 1
a52 1
,   bp
d59 1
a59 1
.ph '''%'
@


1.4
log
@-
@
text
@d2 1
a2 1
# $Id: proff.perl,v 1.3 2011-10-13 14:35:42-07 - - $
a41 1
.warn
@


1.3
log
@-
@
text
@d1 2
a2 2
#!/usr/local/bin/perl -w
# $Id: proff.perl,v 1.2 2011-04-08 17:22:41-07 - - $
d35 1
@


1.2
log
@-
@
text
@d2 1
a2 1
# $Id: proff.perl,v 1.1 2011-01-20 21:15:35-08 - - $
d5 1
a5 1
#    jroff - run the simple jroff text formatter
d8 1
a8 1
#    jroff [-Tps] [filename...]
d11 1
a11 1
#    Runs groff to simulate jroff by using compatibility macros.
d18 2
a19 1
$tformat = @@ARGV && $ARGV[0] eq "-Tps" ? "-Tps" : "-Tlatin1";
d22 1
a22 1
$exit_status = 0;
d27 2
a28 2
$tformat = @@ARGV && $ARGV[0] eq "-Tps" ? "-Tps" : "-Tlatin1";
$groff = "groff $tformat -P-bcuof - @@ARGV";
d31 1
d34 1
a34 1

@


1.1
log
@-
@
text
@d2 1
a2 1
# $Id: proff.perl,v 1.2 2010-01-20 13:41:43-08 - - $
d32 1
a32 1

@
