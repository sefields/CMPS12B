head	1.4;
access;
symbols;
locks;
comment	@ * @;


1.4
date	2013.02.19.22.39.01;	author -;	state -;
branches;
next	1.3;

1.3
date	2013.02.19.22.35.33;	author -;	state -;
branches;
next	1.2;

1.2
date	2013.02.19.20.34.20;	author -;	state -;
branches;
next	1.1;

1.1
date	2013.02.16.03.41.09;	author -;	state -;
branches;
next	;


desc
@@


1.4
log
@-
@
text
@// $Id: debugf.c,v 1.3 2013-02-19 14:35:33-08 - - $

#include <assert.h>
#include <errno.h>
#include <stdarg.h>
#include <stdbool.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>

#include "debugf.h"

static char *debugflags = "";
static bool alldebugflags = false;
char *program_name = NULL;
int exit_status = EXIT_SUCCESS;

void __stubprintf (char *filename, int line, const char *func,
                   char *format, ...) {
   va_list args;
   fflush (NULL);
   assert (program_name != NULL);
   fprintf (stdout, "%s: STUB: %s[%d] %s:\n",
            program_name, filename, line, func);
   va_start (args, format);
   vfprintf (stdout, format, args);
   va_end (args);
   fflush (NULL);
}

void set_debugflags (char *flags) {
   debugflags = flags;
   if (strchr (debugflags, '@@') != NULL) alldebugflags = true;
   DEBUGF ('a', "Debugflags = \"%s\"\n", debugflags);
}

void __debugprintf (char flag, char *file, int line, const char *func,
                    char *format, ...) {
   va_list args;
   if (alldebugflags || strchr (debugflags, flag) != NULL) {
      fflush (NULL);
      assert (program_name != NULL);
      fprintf (stderr, "%s: DEBUGF(%c): %s[%d]: %s()\n",
               program_name, flag, file, line, func);
      va_start (args, format);
      vfprintf (stderr, format, args);
      va_end (args);
      fflush (NULL);
   }
}

@


1.3
log
@-
@
text
@d1 1
a1 1
// $Id: debugf.c,v 1.2 2013-02-19 12:34:20-08 - - $
d3 1
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: debugf.c,v 1.1 2013-02-15 19:41:09-08 - - $
d15 2
a16 5
static char *execname = NULL;

void set_execname (char *name) {
   execname = name;
}
d22 1
a22 1
   assert (execname != NULL);
d24 1
a24 1
            execname, filename, line, func);
d42 1
a42 1
      assert (execname != NULL);
d44 1
a44 1
                execname, flag, file, line, func);
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id: debugf.c,v 1.1 2012-03-05 19:43:01-08 - - $
a20 4
void print_execname (FILE *out) {
   if (execname != NULL) fprintf (out, "%s: ", execname);
}

d25 3
a27 2
   print_execname (stdout);
   fprintf (stdout, "STUB: %s[%d] %s:\n", filename, line, func);
d45 3
a47 3
      print_execname (stderr);
      fprintf (stderr, "DEBUGF(%c): %s[%d]: %s()\n",
                flag, file, line, func);
@
